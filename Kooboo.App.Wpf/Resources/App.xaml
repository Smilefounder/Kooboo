<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Kooboo.App.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:uc="clr-namespace:Kooboo.App.UserControls"
                    xmlns:local="clr-namespace:Kooboo.App.Models">
    <c:IconNormalPathConverter x:Key="normalPath"/>
    <c:IconActivePathConverter x:Key="activePath"/>
    <c:ImagePathConverter x:Key="imagePath"/>

    <SolidColorBrush x:Key="HeaderBlue" Color="#067cb5"/>
    <SolidColorBrush x:Key="SidebarBlue" Color="#005279"/>

    <SolidColorBrush x:Key="ButtonBlue" Color="#00aff1"/>
    <SolidColorBrush x:Key="ButtonHoverBlue" Color="#0093ca"/>
    <SolidColorBrush x:Key="ButtonPressBlue" Color="#0084b5"/>
    <SolidColorBrush x:Key="BorderGray" Color="#d7d7d7"/>
    <SolidColorBrush x:Key="ButtonHoverGray" Color="#d2d2d2"/>
    <SolidColorBrush x:Key="ListItemHoverGray" Color="#efefef"/>
    <SolidColorBrush x:Key="TextGray" Color="#b9b9b9"/>

    <SolidColorBrush x:Key="MouseOverBlue" Color="#00344d"/>
    <SolidColorBrush x:Key="KoobooWhite" Color="#ffffff"/>

    <ControlTemplate TargetType="TextBox" x:Key="KoobooTextBox">
        <TextBox
            VerticalAlignment="Center" 
            BorderThickness="{TemplateBinding BorderThickness}"
            BorderBrush="{TemplateBinding BorderBrush}"
            VerticalContentAlignment="Center" 
            Padding="{TemplateBinding Padding}"
            FontSize="{TemplateBinding FontSize}" 
            Width="{TemplateBinding Width}" 
            Foreground="{TemplateBinding Foreground}"
            InputMethod.IsInputMethodEnabled="False"
            ToolTip="{TemplateBinding ToolTip}"
            Text="{Binding RelativeSource={RelativeSource TemplatedParent},
            Path=Text, 
            Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True
            }"
            uc:TextBoxHelper.Placeholder="{TemplateBinding Tag}" 
           >
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <AdornedElementPlaceholder />
                        <TextBlock>dfsfsdfdsf</TextBlock>
                    </StackPanel>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>
    </ControlTemplate>

    <ControlTemplate TargetType="TextBox" x:Key="FolderTextBox">
        <StackPanel Orientation="Horizontal">
            <TextBox VerticalAlignment="Center"
                     VerticalContentAlignment="Center" 
                     Padding="{TemplateBinding Padding}"
                     FontSize="{TemplateBinding FontSize}" 
                     Width="{TemplateBinding Width}" 
                     Foreground="{TemplateBinding Foreground}"
                     InputMethod.IsInputMethodEnabled="False"
                     Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, UpdateSourceTrigger=PropertyChanged}"
                     uc:TextBoxHelper.Placeholder="{TemplateBinding Tag}" 
                    />
            <Button Width="20" Height="20" Background="Red">Add</Button>
        </StackPanel>
    </ControlTemplate>

    <!-- Header Start -->
    <Style TargetType="Border" x:Key="Title">
        <Setter Property="BorderBrush" Value="{StaticResource BorderGray}"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Height" Value="52"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="H1">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Margin" Value="20,12"/>
    </Style>

    <Style TargetType="Button" x:Key="NavButton">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="20,12"/>
        <Setter Property="Padding" Value="2,4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderGray}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border VerticalAlignment="Center" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}">
                        <WrapPanel Margin="{TemplateBinding Padding}">
                            <ContentPresenter />
                        </WrapPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ListItemHoverGray}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverGray}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Header End -->

    <Style TargetType="Window" x:Key="KoobooWindow">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="Width" Value="520" />
        <Setter Property="Height" Value="360"/>
        <Setter Property="MinHeight" Value="360"/>
        <Setter Property="Icon" Value="pack://application:,,,/Resources/Images/favicon.ico"/>
    </Style>

    <Style TargetType="ListView" x:Key="KoobooListView">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                                      VerticalScrollBarVisibility="Auto"
                                                      >
                        <ScrollViewer.Resources>
                            <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">5</sys:Double>
                            <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">5</sys:Double>
                        </ScrollViewer.Resources>
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListViewItem" x:Key="ListViewItem">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style TargetType="Border" x:Key="ListItem">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ListItemHoverGray}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Border" x:Key="Header">
        <Setter Property="Background" Value="{StaticResource HeaderBlue}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Border" x:Key="Sidebar">
        <Setter Property="Background" Value="{StaticResource SidebarBlue}"/>
    </Style>

    <Style TargetType="RadioButton" x:Key="SidebarButton">
        <Setter Property="BorderBrush" Value="{StaticResource HeaderBlue}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0,12,0,12"/>
        <Setter Property="GroupName" Value="Sidebar"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Padding="{TemplateBinding Padding}" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Image Name="BtnImage" Width="23" Source="{Binding Path=Content,Converter={StaticResource normalPath},RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="BtnImage" Property="Source" Value="{Binding Path=Content,Converter={StaticResource activePath},RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverBlue}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource KoobooWhite}"/>
                <Setter Property="BorderThickness" Value="3,0,0,0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="CloseButton">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Margin" Value="7"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HeaderBlue}"/>
                <Setter Property="Opacity" Value=".5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="RoundButton">
        <Setter Property="Width" Value="130"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{StaticResource KoobooWhite}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBlue}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="16" ToolTip="{TemplateBinding ToolTip}" BorderThickness="0" Background="{TemplateBinding Background}">
                        <ContentPresenter Typography.Capitals="AllSmallCaps" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBlue}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonPressBlue}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="UpgradeButton">
        <Setter Property="Width" Value="130"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{StaticResource KoobooWhite}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBlue}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="6" ToolTip="{TemplateBinding ToolTip}" BorderThickness="0" Background="{TemplateBinding Background}">
                        <ContentPresenter Typography.Capitals="AllSmallCaps" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBlue}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonPressBlue}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="IconButton">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                            Background="{TemplateBinding Background}">
                        <Image Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Source="{Binding Path=Content,Converter={StaticResource imagePath},RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverGray}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" x:Key="InputBox">
        <Setter Property="Width" Value="230"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Foreground" Value="{StaticResource TextGray}"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderGray}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!--<Setter Property="Template" Value="{StaticResource KoobooTextBox}" />-->
        <!--<Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>-->

        <!--<Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                   PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding ElementName=placeholder, Path=AdornedElement.IsFocused, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                      StrokeThickness="2" />
                                <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                    <TextBlock HorizontalAlignment="Center" Foreground="White" FontWeight="Bold" Margin="2,0,0,0"
                                                   Text="{Binding ElementName=placeholder, Path=AdornedElement.ToolTip, Mode=OneWay}" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>-->



        <!--<Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel>
                        <Grid DockPanel.Dock="Right" Width="16" Height="16" VerticalAlignment="Center" Margin="3 0 0 0">
                            <Ellipse Width="16" Height="16" Fill="Red" ToolTip="{Binding ElementName=AdornedElementPlaceholder, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}"/>
                            <Ellipse Width="3" Height="8" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 2 0 0" Fill="White"/>
                            <Ellipse Width="2" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0 0 0 2" Fill="White"/>
                        </Grid>
                        <Border BorderBrush="Red" BorderThickness="2" CornerRadius="2">
                            <AdornedElementPlaceholder x:Name="AdornedElementPlaceholder"/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="Red"/>
                <Setter Property="ToolTip"
                Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <Style TargetType="TextBox" x:Key="FolderBrowserBox">
        <Setter Property="Width" Value="150"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource TextGray}"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
        <!--<Setter Property="Template" Value="{StaticResource FolderTextBox}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>-->
    </Style>

    <Style TargetType="Button" x:Key="LinkButton">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonBlue}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{StaticResource ButtonBlue}" BorderThickness="0,0,0,1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBlue}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonPressBlue}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>